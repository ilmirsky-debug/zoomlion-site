import "dotenv/config";
import fs from "fs";
import path from "path";
import { S3Client, PutObjectCommand } from "@aws-sdk/client-s3";

const bucket = process.env.YANDEX_BUCKET;
const endpoint = process.env.YANDEX_ENDPOINT;
const accessKeyId = process.env.YANDEX_ACCESS_KEY_ID;
const secretAccessKey = process.env.YANDEX_SECRET_ACCESS_KEY;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!bucket || !endpoint || !accessKeyId || !secretAccessKey) {
  console.error("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Yandex Object Storage");
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç S3
const s3 = new S3Client({
  region: "ru-central1",
  endpoint,
  forcePathStyle: true,
  credentials: {
    accessKeyId,
    secretAccessKey,
  },
});

// üìÅ –ü–∞–ø–∫–∞ public (–≤—Å—ë, –∫—Ä–æ–º–µ stock)
const publicDir = path.join(process.cwd(), "public");

async function uploadFile(filePath, key) {
  const fileContent = fs.readFileSync(filePath);
  const contentType =
    key.endsWith(".png") ? "image/png" :
    key.endsWith(".gif") ? "image/gif" :
    "image/jpeg";

  const uploadParams = {
    Bucket: bucket,
    Key: key,
    Body: fileContent,
    ContentType: contentType,
  };

  try {
    await s3.send(new PutObjectCommand(uploadParams));
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω: ${key}`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${key}:`, err.message);
  }
}

async function uploadAll(dir, prefix = "") {
  const items = fs.readdirSync(dir);

  for (const item of items) {
    const fullPath = path.join(dir, item);
    const stats = fs.statSync(fullPath);

    if (stats.isDirectory()) {
      if (item === "stock") continue; // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º stock
      await uploadAll(fullPath, `${prefix}${item}/`);
    } else {
      const key = `${prefix}${item}`;
      await uploadFile(fullPath, key);
    }
  }
}

async function main() {
  console.log(`ü™£ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ public (–∫—Ä–æ–º–µ /stock) –≤ –±–∞–∫–µ—Ç "${bucket}"...`);
  await uploadAll(publicDir);
  console.log("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
}

main();
